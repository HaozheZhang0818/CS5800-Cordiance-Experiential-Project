ITERATION 1

def matchAll():

    for item in Avalara_dict:
        iterator = UNSPSC_tree

        while iterator is not a leaf node:
            for child in iterator.child_list:

                for word in item.word_list:
                    for comparator in child.word_list:
                        if word == comparator:
                            curr_count += 1

                if curr_count > max_count:
                    max_count = curr_count
                    max_child = child

            iterator = max_child




ITERATION 2


def rabinKarp(pattern, text):

    d = 26 # num of letters
    q = 5381 # large prime number
    m = length of pattern
    n = length of text
    h = 1
    num_matches = 0

    for i in range (0 -> m - 1):
        h = (h * d) % q
    
    for i in range (0 -> (n - m + 1))
        if p == t:
            for j in range (0 -> m):
                if text[i + j] != pattern[j]:
                    break
            j += 1
            if j == m:
                num_matches += 1
    
        if i < n - m:
            t = (d * h * (t - ord(text[i]) + ord(text[i + m])) % q

            if t < 0:
                t = t + q

    return num_matches


def rabinKarpMatch():

    for ava_item in Avalara_dict:
        for unspsc_item in UNSPSC_dict:
            for word in ava_item.word_list:
                curr_count = rabinKarp(word, unspsc_item.string)

            if curr_count > max_count:
                max_count = curr_count
                max_item = unspsc_item



ITERATION 3

def sortedMatch():

    for ava_item in Avalara_dict:

        max_count = 0, max_item = None

        for unspsc_item in UNSPSC_dict():

            while ava_index <= ava_lastindex and unspsc_index <= unspsc_lastindex

                while ava_index <= ava_lastindex:
                    while unspsc_index <= unspsc_lastindex:

                        if ava_item.wordlist[ava_index] == unspsc_item[unspsc_index]:
                            curr_count += 1
                            break
                        else:
                            unspsc_index += 1

                    ava_index += 1

            if curr_count > max_count:
                max_count = curr_count
                max_item = unspsc_item




ITERATION 4

def sortedMatch():

    for ava_item in Avalara_dict:

        max_count = 0, max_item = None

        for unspsc_item in UNSPSC_dict():

            while ava_index <= ava_lastindex and unspsc_index <= unspsc_lastindex

                while ava_index <= ava_lastindex:
                    while unspsc_index <= unspsc_lastindex:

                        if ava_item.wordlist[ava_index] == unspsc_item[unspsc_index]:
                            curr_count += 1
                            break

                        elif ava_item.wordlist[ava_index] > unspsc_item[unspsc_index]:
                            unspsc_index += 1

                        else:
                            break

                    ava_index += 1

            if curr_count > max_count:
                max_count = curr_count
                max_item = unspsc_item
